import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
import numpy as np
# import matplotlib.pyplot as plt
from gru import MultiGRU
from lstm import MultiLstm
from rnn import MultiRNN
import matplotlib.pyplot as plt

gru = [0.1521450996398926, 0.14294109642505645, 0.12446121573448181, 0.10624314546585083, 0.10334619879722595, 0.10898086279630662, 0.11761786788702011, 0.09830381870269775, 0.10996703207492828, 0.10987945348024368, 0.10654094219207763, 0.11344152241945267, 0.11057347655296326, 0.11429330259561539, 0.11460504233837128, 0.11072883456945419, 0.10623112767934799, 0.11759185492992401, 0.10863747745752335, 0.10936301052570344]

lstm = [0.15061898827552794, 0.14638689160346985, 0.13238377273082733, 0.12481412291526794, 0.12515445202589034, 0.12867137789726257, 0.12578272819519043, 0.1267266809940338, 0.12740407288074493, 0.12591706812381745, 0.127253457903862, 0.12961519360542298, 0.1263725772500038, 0.1261052280664444, 0.1267387017607689, 0.12755943834781647, 0.12686000913381576, 0.12545886933803557, 0.12791410982608795, 0.12449286431074143]

rnn = [0.14770160913467406, 0.14106509685516358, 0.10852162539958954, 0.08455136716365814, 0.07631645798683166, 0.08968464732170105, 0.0913318231701851, 0.09760475307703018, 0.10098734349012375, 0.10059759318828583, 0.0902273029088974, 0.08737760335206986, 0.08678279668092728, 0.0961062952876091, 0.0875982716679573, 0.09478501975536346, 0.08347312361001968, 0.09151769578456878, 0.10582050532102585, 0.09683302789926529]

xs = [i for i in range(1,401,20)]

plt.xlabel('Batches')
plt.ylabel('Validation MAE')
plt.title('Neural Net Performance')
plt.plot(xs, gru, color='g', label='GRU')
plt.plot(xs, lstm, color='b', label='LSTM')
plt.plot(xs, rnn, color='r', label='RNN')
plt.legend()
plt.show()